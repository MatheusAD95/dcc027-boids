#version 330 core

// Interpolated values from the vertex shaders
in vec2 UV;
in vec3 FragPos;
in vec3 Normal;

// Ouput data
out vec4 FragColor;

// Values that stay constant for the whole mesh.
uniform sampler2D myTextureSampler;

void main(){
  //float distance = length(LightPosition_worldSpace - Position_worldspace);

  // Output color = color of the texture at the specified UV
  //color = texture( myTextureSampler, UV ).rgb;
  vec3 AmbientColor = vec3(0.5f, 0.5f, 0.5f);
  //vec3 color = (texture( myTextureSampler, UV ).rgb)*(AmbientColor);
  //color = (texture( myTextureSampler, UV ).rgb)*(AmbientColor + DiffuseColor);
  vec3 color = texture(myTextureSampler, UV).rgb;

  //color = result;
  vec3 LightColor = vec3(1, 1, 1);
  float LightPower = 50.0f;
  vec3 LightPos = vec3(0, 500, 0);

  float ambientStrength = 0.7;
  vec3 ambient = ambientStrength*LightColor;


  //vec3 norm = normalize(Normal);
  //vec3 lightDir = normalize(LightPos - FragPos);
  //float diff = max(dot(norm, lightDir), 0.0);
  //vec3 diffuse = diff*LightColor;
  vec3 norm = normalize(Normal);
  vec3 lightDir = normalize(LightPos - FragPos);
  float diff = dot(norm, lightDir);
  vec3 diffuse = diff*LightColor;

  vec3 result = (ambient + diffuse)*color;
  //vec3 result = (ambient)*color;
  FragColor = vec4(result, 1.0);

}
